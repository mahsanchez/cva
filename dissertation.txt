Monte Carlo Simulation

Financial problems are usually modelled using Stochastic Differential Equations (SDE). Most of the SDE
problems have a high dimensions integration problems and does not have a closed form solution. Hence, 
numerical methods in the area of stochastic simulations based on sampling methods 
basically simulate independent realizations of the stochastic phenomenon under consideration and then to compute an
estimate for the expectation of interest via an appropriate estimator obtained from independent samples.

In other words, one runs N independent computer experiments replicating the random variable Z, and then computes z from the sample. Use of random sampling or a method for computing a expectation is often called the Monte Carlo method. The estimator of z = E[Z] is an average of independent identical distributed copies of Z. Based on the Law of Large Numbers
for a given N < +oo the stocastic simulation converge to z = 1/n sum[Z] and for N large enough hold that 
En-1[Z] - En[Z] < epsilon. The epsilon value determine the converge criteria for the numerical methods and depends 
on the accuracy required in the specific problem context.

Key Issues arising in Monte Carlo Simulation
- Uniform/Gaussian Random generators
- Large floating point summation
- (Speeding up Convergence) using Variance Reduction
- Long execution time (due to large number of required sampling for convergence)

References

[1] Pykhtin, Michael, and Steven Zhu, A Guide to Modeling Counterparty Credit Risk, GARP, July/August 2007, issue 37, pp. 16-22.

[2] Mathworks. Counterparty Credit Risk and CVA. https://de.mathworks.com/help/fininst/examples/counterparty-credit-risk-and-cva.html

[3] Glasserman, Paul. Importance Sampling in the Heath-Jarrow-Morton framework. https://www0.gsb.columbia.edu/faculty/pglasserman/Other/ghs_jderiv.pdf

[4] Lerche, Ian and Mudford, Brett S. How many Monte Carlo simulations do I need to do?https://journals.sagepub.com/doi/pdf/10.1260/014459805776986876

[5] Jaeckel, Peter. Monte Carlo Methods in Finance

[6] Willmot,Paul. Introduces Quantitative Finance. 

[7] Higham, Nicholas J. (2002). Accuracy and Stability of Numerical Algorithms. 2nd Edition. SIAM. pp. 110â€“123;

[8] Savigne, Antoine. Modern Computational Finance, AAD and Parallel Simulations. 

[9] Joshi, Mark. C++ Design Pattern and Derivatives Pricing. 2nd Edition. 

[10] Wen Wei and Kirk. Programming Massively Parallel Processors. 3rd edition.

[11] Kindratenko, Vlodymyr. Numerical Computations with GPUs. chapter 12, 13, 14

[12] Mudigere, Dheevatsa. Data access optimized applications on the GPU using NVIDIA CUDA. https://www5.in.tum.de/pub/mudigere09.pdf

[13] NVIDIA Curand User Guide. https://docs.nvidia.com/cuda/curand/index.html

[14] NVIDIA CUDA C Programming Guide. https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html

[15] NVIDIA CUDA Best Practices Guide. https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html

